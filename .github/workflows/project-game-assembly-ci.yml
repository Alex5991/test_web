# Custom continuous integration (CI)
name: ProjectGameAssemblyCI

# Controls when the workflow will run
on:
  # Triggers the workflow on push request events but only for the "master" branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Game-Assembled-by-GitHub-Actions"
  Game-Assembled-by-GitHub-Actions:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # # Each task (step) starts in the base path - github.workspace (pwd)
      # - name: Run a one-line script 
      #   run: pwd # Runs a single command using the runners shell
        
      # Clone repo and change branch. Checks-out repository under $GITHUB_WORKSPACE. 
      - uses: actions/checkout@v4
        with:
          ref: main # Ð¡hange to main branch
          repository: Alex5991/games # Copy repo
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN_PAT }} # Secret that contains PAT
          path: games # Downloaded to relative path

      - name: Remove old project from games project
        run: |
          cd ${{ github.workspace }}/games # Switch to games folder (repository: Alex5991/games)
          rm -rf ${{ github.event.repository.name }} # Remove old this project from games repo

      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: games/${{ github.event.repository.name }}

      - name: Push changes into games repository
        run: |
          cd ${{ github.workspace }}/games # Switch to games folder (repository: Alex5991/games)
          # Set up git
          git config user.name github-actions
          git config user.email github-actions@github.com
          # .git must be deleted from current repository
          rm -rf ${{ github.event.repository.name }}/.git*
          git add .
          git commit -m "Automatic assembly project = ${{ github.event.repository.name }} sha = ${{ github.sha }}"
          git push
          
